//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tune.UI {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tune.UI.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace Samples
        ///{
        ///   public class Echoer
        ///   {
        ///      public string Write(string message)
        ///      {
        ///         return message;
        ///      }
        ///   }
        ///}.
        /// </summary>
        internal static string Samples_Sample0 {
            get {
                return ResourceManager.GetString("Samples_Sample0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace Samples
        ///{
        ///   public class Echoer
        ///   {
        ///      public string Write(string message)
        ///      {
        ///         var text = new Test() { Text = message };
        ///         return text.Text;
        ///      }
        ///   }
        ///
        ///   public class Test 
        ///   { 
        ///       public string Text;
        ///   }
        ///}.
        /// </summary>
        internal static string Samples_Sample1 {
            get {
                return ResourceManager.GetString("Samples_Sample1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace Samples
        ///{
        ///   public class Echoer
        ///   {
        ///      public string Write(string message)
        ///      {
        ///         Container&lt;string&gt; c = new Container&lt;string&gt;();
        ///         c.Data = message;
        ///         return Helper(c);
        ///      }
        ///      
        ///      private string Helper&lt;T&gt;(Container&lt;T&gt; obj)
        ///      {
        ///         return &quot;(&quot; + obj.Data.ToString() + &quot;)&quot;;
        ///      }
        ///   }
        ///   
        ///   public class Container&lt;T&gt;
        ///   {
        ///       public T Data;
        ///   }
        ///}.
        /// </summary>
        internal static string Samples_Sample2 {
            get {
                return ResourceManager.GetString("Samples_Sample2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///using System.Collections.Generic;
        ///
        ///namespace Samples
        ///{
        ///   public class Echoer
        ///   {
        ///      // Suggested input to visualize GC is 4000
        ///      public string Write(string input)
        ///      {
        ///         int size = int.Parse(input);
        ///         List&lt;BigData&gt; bigList = new List&lt;BigData&gt;();
        ///         for (int i = 0; i &lt; size; ++i)
        ///         {
        ///            var elem = new BigData();
        ///            elem.Array[0] = 1;
        ///            bigList.Add(elem);
        ///            Thread.Sleep(10);
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Samples_Sample3 {
            get {
                return ResourceManager.GetString("Samples_Sample3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;SyntaxDefinition name=&quot;IL&quot; xmlns=&quot;http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008&quot;&gt;
        ///    &lt;Color name=&quot;Comment&quot; foreground=&quot;Green&quot; /&gt;
        ///    &lt;Color name=&quot;String&quot; foreground=&quot;Blue&quot; /&gt;
        ///    
        ///    &lt;!-- This is the main ruleset. --&gt;
        ///    &lt;RuleSet&gt;
        ///        &lt;Span color=&quot;Comment&quot; begin=&quot;;&quot; /&gt;
        ///        &lt;Span color=&quot;String&quot;&gt;
        ///            &lt;Begin&gt;&quot;&lt;/Begin&gt;
        ///            &lt;End&gt;&quot;&lt;/End&gt;
        ///            &lt;RuleSet&gt;
        ///                &lt;!-- nested span for escape sequences --&gt;
        ///                &lt;Span begin=&quot;\\&quot; end=&quot;.&quot; /&gt;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SyntaxHighlightingIL {
            get {
                return ResourceManager.GetString("SyntaxHighlightingIL", resourceCulture);
            }
        }
    }
}
